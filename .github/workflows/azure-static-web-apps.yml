name: Deploy — Azure Static Web Apps

on:
  push:
    branches: ['main']           # only deploy prod from main
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: swa-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      NUXT_PUBLIC_CF_ANALYTICS_TOKEN: ${{ secrets.CF_WEB_ANALYTICS_TOKEN }}
      NUXT_PUBLIC_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'pnpm'
          cache-dependency-path: 'pnpm-lock.yaml'

      - name: Install
        # NOTE: Temporarily allow lockfile updates because package.json gained dev deps (sharp, to-ico)
        # and pnpm-lock.yaml is not updated yet in this PR. Restore --frozen-lockfile after lock is committed.
        run: pnpm install --frozen-lockfile=false

      - name: Expose build metadata
        run: |
          echo "NUXT_PUBLIC_BUILD_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "NUXT_PUBLIC_BUILD_BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "NUXT_PUBLIC_BUILD_TIME=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV

      - name: "Preflight: ensure Supabase env"
        run: |
          if [ -z "$SUPABASE_URL" ] || [ -z "$SUPABASE_ANON_KEY" ]; then
            echo "ERROR: Missing SUPABASE_URL or SUPABASE_ANON_KEY secrets"
            exit 1
          fi
          echo "Supabase env present."

      - name: "Preflight: optional analytics env"
        run: |
          if [ -z "$NUXT_PUBLIC_CF_ANALYTICS_TOKEN" ]; then
            echo "NOTE: NUXT_PUBLIC_CF_ANALYTICS_TOKEN not set — Cloudflare beacon will not be injected."
          else
            echo "Cloudflare Analytics token is set (masked)."
          fi
          if [ -z "$NUXT_PUBLIC_SENTRY_DSN" ]; then
            echo "NOTE: NUXT_PUBLIC_SENTRY_DSN not set — Sentry will be disabled."
          else
            echo "Sentry DSN is set (masked)."
          fi

      - name: Generate static site
        env:
          NUXT_PUBLIC_CF_ANALYTICS_TOKEN: ${{ secrets.CF_WEB_ANALYTICS_TOKEN }}
          NUXT_PUBLIC_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        run: |
          pnpm exec nuxi generate
          test -d .output/public

      - name: Ensure SWA config in artifact
        run: |
          cp -f public/staticwebapp.config.json .output/public/staticwebapp.config.json || true
          test -f .output/public/staticwebapp.config.json
          echo "Artifact root:"; ls -la .output/public | sed -n '1,200p'

      - name: "Preflight: ensure SWA token exists"
        env:
          SWA_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        run: |
          if [ -z "$SWA_TOKEN" ]; then
            echo "ERROR: Missing AZURE_STATIC_WEB_APPS_API_TOKEN secret"
            exit 1
          fi
          echo "AZURE_STATIC_WEB_APPS_API_TOKEN is set (masked)."

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: '.output/public'
          skip_app_build: true   # we already built generated static files
