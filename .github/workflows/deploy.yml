name: build and deploy

on:
  push:
    branches: [main]
    paths:
      - 'app/**'
      - '.github/workflows/deploy.yml'
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: app

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show workspace (debug)
        run: |
          pwd
          ls -la
          echo "::group::repo root"
          ls -la $GITHUB_WORKSPACE
          echo "::endgroup::"
          echo "::group::app dir"
          ls -la .
          echo "::endgroup::"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Get pnpm store directory
        id: pnpm-store
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install deps
        run: |
          # ensure lockfile is available inside /app for frozen install
          cp ../pnpm-lock.yaml pnpm-lock.yaml
          pnpm install --frozen-lockfile

      - name: Tailwind probe
        run: |
          node -e "console.log('tailwind config exists:', require('fs').existsSync('tailwind.config.ts') || require('fs').existsSync('tailwind.config.js'))"
          rg -n "text-ink|@apply" assets/css assets/styles || true

      - name: Lint (non-blocking)
        run: pnpm run lint || true

      - name: Typecheck (non-blocking)
        run: pnpm run typecheck
        continue-on-error: true

      - name: Generate static site
        env:
          NUXT_TELEMETRY_DISABLED: '1'
          NITRO_PRESET: static
        run: pnpm run generate

      - name: Verify build output (must exist)
        run: |
          set -e
          test -d .output/public || (echo "‚ùå .output/public missing"; exit 1)
          echo "::group::tree .output"
          ls -la .output
          ls -la .output/public || true
          ls -la .output/public/_nuxt || true
          echo "::endgroup::"

      - name: List build output (debug)
        run: |
          echo "::group::tree .output/public"
          ls -la .output/public
          echo
          ls -la .output/public/_nuxt || true
          echo "::endgroup::"

      - name: Upload to SWA
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.SWA_DEPLOYMENT_TOKEN }}
          action: upload
          app_location: "app"
          output_location: ".output/public"
          skip_app_build: true
