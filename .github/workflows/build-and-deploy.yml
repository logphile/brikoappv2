name: build-and-deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

concurrency:
  group: briko-deploy-main
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install
        run: pnpm i --frozen-lockfile

      # ---- BUILD ----
      - name: Build (Nuxt static)
        env:
          NUXT_TELEMETRY_DISABLED: 1
        run: |
          set -euxo pipefail
          time pnpm exec nuxi generate

      # ---- MEASURE ----
      - name: Inspect output size
        run: |
          echo "---- .output ----"
          du -h -d1 .output || true
          echo "---- .output/public (top 30 dirs) ----"
          du -h -d2 .output/public | sort -h | tail -n 30 || true
          echo "---- Largest 50 files ----"
          find .output/public -type f -printf '%s %p\n' \
            | sort -nr | head -n 50 \
            | awk '{ printf "%8.1f MB  %s\n", $1/1024/1024, $2 }'

      # ---- GUARDRAILS ----
      - name: Artifact size guard
        run: bash scripts/guard-artifacts.sh

      # ---- VERIFY ----
      - name: Verify output exists
        run: test -d .output/public && ls -la .output/public | head -n 50

      # ---- DEPLOY (skip internal build; upload only static output) ----
      - name: Deploy to Azure Static Web Apps (verbose)
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          skip_app_build: true
          app_location: "."
          output_location: ".output/public"
          verbose: true

      # ---- fallback: CLI uploader (uncomment if action still stalls) ----
      # - name: Deploy via SWA CLI
      #   run: |
      #     npm i -g @azure/static-web-apps-cli
      #     swa deploy .output/public --env production --verbose
      #   env:
      #     SWA_CLI_DEPLOYMENT_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
