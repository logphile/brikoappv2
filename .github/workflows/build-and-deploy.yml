name: build-and-deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_OPTIONS: "--max-old-space-size=4096"
  NUXT_PUBLIC_SUPABASE_URL: ${{ secrets.NUXT_PUBLIC_SUPABASE_URL }}
  NUXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NUXT_PUBLIC_SUPABASE_ANON_KEY }}

# 1) prove the NEW SWA + token accept uploads
jobs:
  deploy-smoke:
    if: ${{ github.event_name == 'workflow_dispatch' }}  # manual only
    runs-on: ubuntu-latest            # <‚Äî container action needs Linux
    timeout-minutes: 5
    steps:
      - name: Tiny site
        shell: bash
        run: |
          mkdir -p smoke
          echo '<!doctype html><title>ok</title><h1>ok</h1>' > smoke/index.html

      - name: SWA deploy (smoke)
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: upload
          skip_app_build: true
          app_location: "smoke"
          production_branch: "main"

  # 2) build the site only if smoke succeeded
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      CI: "true"
      NUXT_TELEMETRY_DISABLED: "1"
      NPM_CONFIG_FUND: "false"
      NPM_CONFIG_AUDIT: "false"
      NPM_CONFIG_REGISTRY: "https://registry.npmjs.org"
      PNPM_HOME: ~/.pnpm

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Prep pnpm store cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpmstore-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpmstore-

      - name: Configure pnpm
        run: |
          set -euxo pipefail
          pnpm config set store-dir ~/.pnpm-store
          pnpm config set registry "$NPM_CONFIG_REGISTRY"
          pnpm config set fetch-retries 5
          pnpm config set fetch-retry-maxtimeout 60000

      - name: "‚è±Ô∏è Install (phase 1: fetch network)"
        run: |
          set -euxo pipefail
          date +"fetch start %T"
          pnpm fetch --frozen-lockfile
          date +"fetch end   %T"

      - name: "‚è±Ô∏è Install (phase 2: offline restore)"
        run: |
          set -euxo pipefail
          date +"install start %T"
          pnpm install --frozen-lockfile --offline
          date +"install end   %T"
          pnpm -v && node -v

      - name: "‚è±Ô∏è Build (Nuxt static, 12m cap + diagnostics)"
        run: |
          set -euxo pipefail
          date +"generate start %T"
          timeout 12m pnpm exec nuxi generate || {
            echo "üî¥ nuxi generate exceeded 12m ‚Äî dumping diagnostics"
            echo "Running processes:"; ps aux | head -n 200
            echo "Disk usage:"; df -h
            echo "Recent files in .output:"; (ls -lah .output/public || true)
            exit 1
          }
          date +"generate end   %T"

      - name: Verify output exists
        shell: bash
        run: |
          test -f .output/public/index.html || (echo "index.html missing" && exit 1)
          echo "files:" $(find .output/public -type f | wc -l)
          du -h -d1 .output | sort -h | tail -n 20

      - name: Upload site artifact
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: .output/public
          if-no-files-found: error
          retention-days: 1

  # 3A) Deploy via SWA Action (upload-only)
  deploy-azure-prod:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 6
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: site
          path: site

      - name: Sanity before deploy
        shell: bash
        run: |
          test -f site/index.html || (echo "artifact missing index.html" && exit 1)
          echo "files:" $(find site -type f | wc -l)
          [ -f site/staticwebapp.config.json ] && jq -r '.navigationFallback' site/staticwebapp.config.json || echo "no staticwebapp.config.json"

      - name: Deploy to Azure Static Web Apps (prod)
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: upload
          skip_app_build: true
          app_location: "site"     # folder that contains index.html
          output_location: ""      # MUST be empty string when skip_app_build is true
          production_branch: "main"